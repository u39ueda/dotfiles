//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created by ___FULLUSERNAME___ on ___DATE___.
//  Copyright © ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

public final class ___VARIABLE_productName:identifier___ViewController: UIViewController, ___VARIABLE_productName:identifier___ViewProtocol {

    // MARK: - IBOutlet

    // MARK: Properties

    public var presenter: ___VARIABLE_productName:identifier___PresenterProtocol?

    // MARK: - Life cycle

    /// コンストラクタ
    public convenience init() {
        self.init(nibName: nil, bundle: Bundle(for: type(of: self)))
    }

    /// コンストラクタ
    public override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    }

    /// コンストラクタ（xib/storyboardから生成された場合）
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
    }

    /// デストラクタ
    deinit {
    }

    /// 画面がロードされた時に一度だけ呼ばれる処理.
    override public func viewDidLoad() {
        super.viewDidLoad()

        presenter?.viewDidLoad()
    }

    /// メモリ不足時に呼ばれる処理.
    override public func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
    }

    /// 画面が表示される直前に呼ばれる処理.
    override public func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)

        presenter?.viewWillAppear(animated)
    }

    /// 画面が表示された直後に呼ばれる処理.
    override public func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)

        presenter?.viewDidAppear(animated)
    }

    /// 画面が非表示にされる直前に呼ばれる処理.
    override public func viewWillDisappear(_ animated: Bool) {
        presenter?.viewWillDisappear(animated)
        super.viewWillDisappear(animated)
    }

    /// 画面が非表示にされた直後に呼ばれる処理.
    override public func viewDidDisappear(_ animated: Bool) {
        presenter?.viewDidDisappear(animated)
        super.viewDidDisappear(animated)
    }

    // MARK: Rotate

    // MARK: Override

    // MARK: - ViewProtocol
}

// MARK: - Methods
// MARK: - Actions
// MARK: - Notifications
